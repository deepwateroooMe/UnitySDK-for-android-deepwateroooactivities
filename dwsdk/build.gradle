apply plugin: 'com.android.library'
// plugins {
//     id 'com.android.library' // <<<<<<<<<<<<<<<<<<<< 可以直接把app 改成早类库就可以了,不同再导一个
// }

android {
    namespace 'com.deepwaterooo.dwsdk' // <<<<<<<<<<<<<<<<<<<< 这个需要,  与小SDK是一模一样同一个包裹下的吗 ?
    compileSdk 32

    defaultConfig {
        minSdk 25
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


// 狠奇怪:它为什么会时灵时不灵的,我感觉自己什么也没有动,它今天就可以打包打成功了 .gradle的版本号吗 ?
def jarName = 'deepwaterooo_activity.jar'
task deleteOldJar(type: Delete){
    delete 'build/outputs/' + jarName
}
task exportJar(type: Copy){
    from('build/intermediates/aar_main_jar/debug/')
    into('build/outputs/')
    include('classes.jar')
    rename('classes.jar', jarName)
}
exportJar.dependsOn(deleteOldJar, build)

dependencies {
    compileOnly files('libs\\classes.jar') // <<<<<<<<<<<<<<<<<<<< Unity里的这些类是分Mono il2cpp的,要区分
    compileOnly files('libs\\dwsdk-debug.aar')

    // 这个包裹,最好是不要任何的依赖,只打个.jar: 可是好像还是需要这些的
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // testImplementation 'junit:junit:4.13.2'
    // androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    // androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}
